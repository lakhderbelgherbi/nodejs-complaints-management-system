{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"date":"Wed Oct 20 2021 21:23:32 GMT+0100 (Central European Standard Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: tickets is not defined\nReferenceError: tickets is not defined\n    at Object.<anonymous> (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\app.js:30:25)\n    at Module._compile (internal/modules/cjs/loader.js:1068:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\n    at Module.load (internal/modules/cjs/loader.js:933:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:774:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47","os":{"loadavg":[0,0,0],"uptime":378610},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\app.js"],"cwd":"C:\\Users\\lakhder\\Desktop\\complaints-management-system","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":36449135,"external":38064826,"heapTotal":58912768,"heapUsed":30714120,"rss":82128896},"pid":7908,"uid":null,"version":"v14.17.0"},"stack":"ReferenceError: tickets is not defined\n    at Object.<anonymous> (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\app.js:30:25)\n    at Module._compile (internal/modules/cjs/loader.js:1068:30)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1097:10)\n    at Module.load (internal/modules/cjs/loader.js:933:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:774:14)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47","trace":[{"column":25,"file":"C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\app.js","function":null,"line":30,"method":null,"native":false},{"column":30,"file":"internal/modules/cjs/loader.js","function":"Module._compile","line":1068,"method":"_compile","native":false},{"column":10,"file":"internal/modules/cjs/loader.js","function":"Module._extensions..js","line":1097,"method":".js","native":false},{"column":32,"file":"internal/modules/cjs/loader.js","function":"Module.load","line":933,"method":"load","native":false},{"column":14,"file":"internal/modules/cjs/loader.js","function":"Module._load","line":774,"method":"_load","native":false},{"column":12,"file":"internal/modules/run_main.js","function":"Function.executeUserEntryPoint [as runMain]","line":72,"method":"executeUserEntryPoint [as runMain]","native":false},{"column":47,"file":"internal/main/run_main_module.js","function":null,"line":17,"method":null,"native":false}]}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:1123:12)\n    at ServerResponse.json (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:260:14)\n    at ServerResponse.send (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:11:9\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:1123:12)\n    at ServerResponse.json (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:260:14)\n    at ServerResponse.send (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:10:9\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:1123:12)\n    at ServerResponse.json (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:260:14)\n    at ServerResponse.send (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:10:9\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:1123:12)\n    at ServerResponse.json (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:260:14)\n    at ServerResponse.send (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:10:9\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot destructure property 'error' of 'ticketRegister(...)' as it is undefined. Cannot destructure property 'error' of 'ticketRegister(...)' as it is undefined.","stack":"TypeError: Cannot destructure property 'error' of 'ticketRegister(...)' as it is undefined.\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:17:13\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"body":"{\r\n    \"title\": \"Réclamation de produit non livret\",\r\n    \"launch\": \"email\",\r\n    \"departementId\": \"123456\",\r\n    \"customerId\": \"987654\",\r\n    \"ticket_description\": \"Le produit n'est pas encours livret malgé la présence ...\",\r\n}","expose":true,"level":"error","message":"Unexpected token } in JSON at position 227 Unexpected token } in JSON at position 227","stack":"SyntaxError: Unexpected token } in JSON at position 227\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\read.js:121:18\n    at invokeCallback (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:224:16)\n    at done (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:213:7)\n    at IncomingMessage.onEnd (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:273:7)\n    at IncomingMessage.emit (events.js:388:22)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Team is not defined Team is not defined","stack":"ReferenceError: Team is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:24:18\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"ticket_status":{"kind":"minlength","message":"Path `ticket_status` (`New`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"ticket_status","properties":{"message":"Path `ticket_status` (`New`) is shorter than the minimum allowed length (5).","minlength":5,"path":"ticket_status","type":"minlength","value":"New"},"value":"New"}},"level":"error","message":"Ticket validation failed: ticket_status: Path `ticket_status` (`New`) is shorter than the minimum allowed length (5). Ticket validation failed: ticket_status: Path `ticket_status` (`New`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Ticket validation failed: ticket_status: Path `ticket_status` (`New`) is shorter than the minimum allowed length (5).\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"departmentId is not defined departmentId is not defined","stack":"ReferenceError: departmentId is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:22:33\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"departmentId is not defined departmentId is not defined","stack":"ReferenceError: departmentId is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:22:33\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"departmentId is not defined departmentId is not defined","stack":"ReferenceError: departmentId is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:22:34\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Ticket.agregate is not a function Ticket.agregate is not a function","stack":"TypeError: Ticket.agregate is not a function\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:20:34\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])` Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`","stack":"MongooseError: Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`\n    at Function.aggregate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\model.js:4150:11)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:20:34\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])` Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`","stack":"MongooseError: Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`\n    at Function.aggregate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\model.js:4150:11)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:20:34\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])` Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`","stack":"MongooseError: Mongoose 5.x disallows passing a spread of operators to `Model.aggregate()`. Instead of `Model.aggregate({ $match }, { $skip })`, do `Model.aggregate([{ $match }, { $skip }])`\n    at Function.aggregate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\model.js:4150:11)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:20:34\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"ticketUpdate is not defined ticketUpdate is not defined","stack":"ReferenceError: ticketUpdate is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:62:23\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot set property 'ticket_description' of undefined Cannot set property 'ticket_description' of undefined","stack":"TypeError: Cannot set property 'ticket_description' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:83:47\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"launch":{"kind":"enum","message":"`Phone` is not a valid enum value for path `launch`.","name":"ValidatorError","path":"launch","properties":{"enumValues":["call","email","letter","present"],"message":"`Phone` is not a valid enum value for path `launch`.","path":"launch","type":"enum","value":"Phone"},"value":"Phone"}},"level":"error","message":"Ticket validation failed: launch: `Phone` is not a valid enum value for path `launch`. Ticket validation failed: launch: `Phone` is not a valid enum value for path `launch`.","stack":"ValidationError: Ticket validation failed: launch: `Phone` is not a valid enum value for path `launch`.\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"launch":{"kind":"enum","message":"`call ` is not a valid enum value for path `launch`.","name":"ValidatorError","path":"launch","properties":{"enumValues":["call","email","letter","present"],"message":"`call ` is not a valid enum value for path `launch`.","path":"launch","type":"enum","value":"call "},"value":"call "}},"level":"error","message":"Ticket validation failed: launch: `call ` is not a valid enum value for path `launch`. Ticket validation failed: launch: `call ` is not a valid enum value for path `launch`.","stack":"ValidationError: Ticket validation failed: launch: `call ` is not a valid enum value for path `launch`.\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"customer.email":1},"keyValue":{"customer.email":"lakhder@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" } E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"customer.email":1},"keyValue":{"customer.email":"lakhder@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" } E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"customer.email":1},"keyValue":{"customer.email":"lakhder@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" } E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"customer.email":1},"keyValue":{"customer.email":"lakhder@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" } E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"code":11000,"index":0,"keyPattern":{"customer.email":1},"keyValue":{"customer.email":"lakhder@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" } E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.tickets index: customer.email_1 dup key: { customer.email: \"lakhder@gmail.com\" }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot read property '0' of undefined Cannot read property '0' of undefined","stack":"TypeError: Cannot read property '0' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:94:56\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"body":"{\r\n    // \"commentBody\": \"Problème de matière\"\r\n}","expose":true,"level":"error","message":"Unexpected token / in JSON at position 7 Unexpected token / in JSON at position 7","stack":"SyntaxError: Unexpected token / in JSON at position 7\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\read.js:121:18\n    at invokeCallback (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:224:16)\n    at done (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:213:7)\n    at IncomingMessage.onEnd (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:273:7)\n    at IncomingMessage.emit (events.js:388:22)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"error","message":"Cannot read property '0' of undefined Cannot read property '0' of undefined","stack":"TypeError: Cannot read property '0' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:94:56\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"error","message":"Cannot read property '0' of undefined Cannot read property '0' of undefined","stack":"TypeError: Cannot read property '0' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:94:56\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot read property '0' of undefined Cannot read property '0' of undefined","stack":"TypeError: Cannot read property '0' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:94:56\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"body":"{\r\n    // \"commentBody\": \"M\"\r\n}","expose":true,"level":"error","message":"Unexpected token / in JSON at position 7 Unexpected token / in JSON at position 7","stack":"SyntaxError: Unexpected token / in JSON at position 7\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\read.js:121:18\n    at invokeCallback (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:224:16)\n    at done (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:213:7)\n    at IncomingMessage.onEnd (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:273:7)\n    at IncomingMessage.emit (events.js:388:22)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"comments.0._id":{"kind":"ObjectId","message":"Cast to ObjectId failed for value \"Le probleme du retart est justifier par rapport au manque de la matière premiere\" (type string) at path \"_id\"","name":"CastError","path":"_id","reason":{},"stringValue":"\"Le probleme du retart est justifier par rapport au manque de la matière premiere\"","value":"Le probleme du retart est justifier par rapport au manque de la matière premiere","valueType":"string"}},"level":"error","message":"Ticket validation failed: comments.0._id: Cast to ObjectId failed for value \"Le probleme du retart est justifier par rapport au manque de la matière premiere\" (type string) at path \"_id\" Ticket validation failed: comments.0._id: Cast to ObjectId failed for value \"Le probleme du retart est justifier par rapport au manque de la matière premiere\" (type string) at path \"_id\"","stack":"ValidationError: Ticket validation failed: comments.0._id: Cast to ObjectId failed for value \"Le probleme du retart est justifier par rapport au manque de la matière premiere\" (type string) at path \"_id\"\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at EmbeddedDocument.Subdocument.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\subdocument.js:204:12)\n    at EmbeddedDocument.$set (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:1447:12)\n    at EmbeddedDocument.$set (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:1149:16)\n    at EmbeddedDocument.Document (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:158:12)\n    at EmbeddedDocument.Subdocument (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\subdocument.js:28:12)\n    at EmbeddedDocument.ArraySubdocument [as constructor] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\ArraySubdocument.js:36:15)\n    at new EmbeddedDocument (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schema\\documentarray.js:115:17)\n    at Proxy._cast (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\DocumentArray\\methods\\index.js:84:17)\n    at Proxy._mapCast (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\array\\methods\\index.js:258:17)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"comments.0.body":{"kind":"string","message":"Cast to string failed for value \"{\n  commentBody: 'Le probleme du retart est justifier par rapport au manque de la matière premiere'\n}\" (type Object) at path \"body\"","name":"CastError","path":"body","reason":null,"stringValue":"\"{\n  commentBody: 'Le probleme du retart est justifier par rapport au manque de la matière premiere'\n}\"","value":{"commentBody":"Le probleme du retart est justifier par rapport au manque de la matière premiere"},"valueType":"Object"}},"level":"error","message":"Ticket validation failed: comments.0.body: Cast to string failed for value \"{\n  commentBody: 'Le probleme du retart est justifier par rapport au manque de la matière premiere'\n}\" (type Object) at path \"body\" Ticket validation failed: comments.0.body: Cast to string failed for value \"{\n  commentBody: 'Le probleme du retart est justifier par rapport au manque de la matière premiere'\n}\" (type Object) at path \"body\"","stack":"ValidationError: Ticket validation failed: comments.0.body: Cast to string failed for value \"{\n  commentBody: 'Le probleme du retart est justifier par rapport au manque de la matière premiere'\n}\" (type Object) at path \"body\"\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at EmbeddedDocument.Subdocument.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\subdocument.js:204:12)\n    at EmbeddedDocument.$set (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:1447:12)\n    at EmbeddedDocument.$set (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:1149:16)\n    at EmbeddedDocument.Document (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:158:12)\n    at EmbeddedDocument.Subdocument (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\subdocument.js:28:12)\n    at EmbeddedDocument.ArraySubdocument [as constructor] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\ArraySubdocument.js:36:15)\n    at new EmbeddedDocument (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schema\\documentarray.js:115:17)\n    at Proxy._cast (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\DocumentArray\\methods\\index.js:84:17)\n    at Proxy._mapCast (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\types\\array\\methods\\index.js:258:17)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"ticket.status is not a function ticket.status is not a function","stack":"TypeError: ticket.status is not a function\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:117:12\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"body":"{\r\n    \"ticket_status\": \"close\",\r\n    \r\n}","expose":true,"level":"error","message":"Unexpected token } in JSON at position 40 Unexpected token } in JSON at position 40","stack":"SyntaxError: Unexpected token } in JSON at position 40\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\read.js:121:18\n    at invokeCallback (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:224:16)\n    at done (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:213:7)\n    at IncomingMessage.onEnd (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:273:7)\n    at IncomingMessage.emit (events.js:388:22)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"error","message":"ticketClose is not defined ticketClose is not defined","stack":"ReferenceError: ticketClose is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:126:23\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot read property 'details' of undefined Cannot read property 'details' of undefined","stack":"TypeError: Cannot read property 'details' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:127:39\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"body":"{\r\n    // \"ticket_status\": \"close\",\r\n    \"ticket_response\": \"C'est ma reponse pour cette ticket\"\r\n}","expose":true,"level":"error","message":"Unexpected token / in JSON at position 7 Unexpected token / in JSON at position 7","stack":"SyntaxError: Unexpected token / in JSON at position 7\n    at JSON.parse (<anonymous>)\n    at parse (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\types\\json.js:89:19)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\body-parser\\lib\\read.js:121:18\n    at invokeCallback (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:224:16)\n    at done (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:213:7)\n    at IncomingMessage.onEnd (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\raw-body\\index.js:273:7)\n    at IncomingMessage.emit (events.js:388:22)\n    at endReadableNT (internal/streams/readable.js:1336:12)\n    at processTicksAndRejections (internal/process/task_queues.js:82:21)","status":400,"statusCode":400,"type":"entity.parse.failed"}
{"level":"error","message":"Cannot read property 'details' of undefined Cannot read property 'details' of undefined","stack":"TypeError: Cannot read property 'details' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:127:39\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot read property 'details' of undefined Cannot read property 'details' of undefined","stack":"TypeError: Cannot read property 'details' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:127:39\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cannot read property 'details' of undefined Cannot read property 'details' of undefined","stack":"TypeError: Cannot read property 'details' of undefined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\tickets.js:127:39\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Ticket validation failed","errors":{"ticket_status":{"kind":"enum","message":"`close` is not a valid enum value for path `ticket_status`.","name":"ValidatorError","path":"ticket_status","properties":{"enumValues":["New","being_precessed","closed"],"message":"`close` is not a valid enum value for path `ticket_status`.","path":"ticket_status","type":"enum","value":"close"},"value":"close"}},"level":"error","message":"Ticket validation failed: ticket_status: `close` is not a valid enum value for path `ticket_status`. Ticket validation failed: ticket_status: `close` is not a valid enum value for path `ticket_status`.","stack":"ValidationError: Ticket validation failed: ticket_status: `close` is not a valid enum value for path `ticket_status`.\n    at model.Document.invalidate (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"team.team_name":1},"keyValue":{"team.team_name":null},"level":"error","message":"E11000 duplicate key error collection: cms.users index: team.team_name_1 dup key: { team.team_name: null } E11000 duplicate key error collection: cms.users index: team.team_name_1 dup key: { team.team_name: null }","stack":"MongoServerError: E11000 duplicate key error collection: cms.users index: team.team_name_1 dup key: { team.team_name: null }\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:376:20)\n    at processIncomingData (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at writeOrBuffer (internal/streams/writable.js:358:12)\n    at MessageStream.Writable.write (internal/streams/writable.js:303:10)\n    at Socket.ondata (internal/streams/readable.js:745:22)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"token is not defined token is not defined","stack":"ReferenceError: token is not defined\n    at C:\\Users\\lakhder\\Desktop\\complaints-management-system\\src\\routes\\users.js:54:70\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
