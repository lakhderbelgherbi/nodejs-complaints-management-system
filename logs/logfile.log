{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Cutomer is not defined Cutomer is not defined","stack":"ReferenceError: Cutomer is not defined\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\customers.js:20:20\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Customer validation failed","errors":{"last_name":{"kind":"minlength","message":"Path `last_name` (`Ali`) is shorter than the minimum allowed length (5).","name":"ValidatorError","path":"last_name","properties":{"message":"Path `last_name` (`Ali`) is shorter than the minimum allowed length (5).","minlength":5,"path":"last_name","type":"minlength","value":"Ali"},"value":"Ali"},"password":{"kind":"required","message":"Path `password` is required.","name":"ValidatorError","path":"password","properties":{"message":"Path `password` is required.","path":"password","type":"required"}}},"level":"error","message":"Customer validation failed: password: Path `password` is required., last_name: Path `last_name` (`Ali`) is shorter than the minimum allowed length (5). Customer validation failed: password: Path `password` is required., last_name: Path `last_name` (`Ali`) is shorter than the minimum allowed length (5).","stack":"ValidationError: Customer validation failed: password: Path `password` is required., last_name: Path `last_name` (`Ali`) is shorter than the minimum allowed length (5).\n    at model.Document.invalidate (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"_message":"Customer validation failed","errors":{"password":{"kind":"required","message":"Path `password` is required.","name":"ValidatorError","path":"password","properties":{"message":"Path `password` is required.","path":"password","type":"required"}}},"level":"error","message":"Customer validation failed: password: Path `password` is required. Customer validation failed: password: Path `password` is required.","stack":"ValidationError: Customer validation failed: password: Path `password` is required.\n    at model.Document.invalidate (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2907:32)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\document.js:2698:17\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\schematype.js:1280:9\n    at processTicksAndRejections (internal/process/task_queues.js:79:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"taher.ali@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" } E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" }\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:321:20)\n    at processIncomingData (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at doWrite (_stream_writable.js:441:12)\n    at writeOrBuffer (_stream_writable.js:425:5)\n    at MessageStream.Writable.write (_stream_writable.js:316:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"email is not defined email is not defined","stack":"ReferenceError: email is not defined\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\customers.js:18:45\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:174:3)\n    at router (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:47:12)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"code":11000,"index":0,"keyPattern":{"email":1},"keyValue":{"email":"taher.ali@gmail.com"},"level":"error","message":"E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" } E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" }","stack":"MongoServerError: E11000 duplicate key error collection: cms.customers index: email_1 dup key: { email: \"taher.ali@gmail.com\" }\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\operations\\insert.js:51:33\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection_pool.js:272:25\n    at handleOperationResult (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\sdam\\server.js:363:9)\n    at MessageStream.messageHandler (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\connection.js:479:9)\n    at MessageStream.emit (events.js:321:20)\n    at processIncomingData (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:108:16)\n    at MessageStream._write (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongodb\\lib\\cmap\\message_stream.js:28:9)\n    at doWrite (_stream_writable.js:441:12)\n    at writeOrBuffer (_stream_writable.js:425:5)\n    at MessageStream.Writable.write (_stream_writable.js:316:11)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle","stack":"TypeError: Converting circular structure to JSON\n    --> starting at object with constructor 'Topology'\n    |     property 's' -> object with constructor 'Object'\n    |     property 'sessionPool' -> object with constructor 'ServerSessionPool'\n    --- property 'topology' closes the circle\n    at JSON.stringify (<anonymous>)\n    at stringify (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:1123:12)\n    at ServerResponse.json (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:260:14)\n    at ServerResponse.send (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\response.js:158:21)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\teams.js:10:16\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Joi.string(...).require is not a function Joi.string(...).require is not a function","stack":"TypeError: Joi.string(...).require is not a function\n    at teamRegister (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\validations\\teamValidations.js:7:40)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\teams.js:22:23\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)\n    at Function.handle (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:174:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"findById is not defined findById is not defined","stack":"ReferenceError: findById is not defined\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\teams.js:14:18\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"Joi.string(...).require is not a function Joi.string(...).require is not a function","stack":"TypeError: Joi.string(...).require is not a function\n    at teamUpdate (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\validations\\teamValidations.js:17:40)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\teams.js:40:23\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"{ _id: undefined }\" (type Object) at path \"_id\" for model \"Team\" Cast to ObjectId failed for value \"{ _id: undefined }\" (type Object) at path \"_id\" for model \"Team\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"{ _id: undefined }\" (type Object) at path \"_id\" for model \"Team\"\n    at model.Query.exec (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Query.then (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)","stringValue":"\"{ _id: undefined }\"","value":{},"valueType":"Object"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"userSetRoleValidation is not defined userSetRoleValidation is not defined","stack":"ReferenceError: userSetRoleValidation is not defined\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\users.js:242:23\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"error","message":"userSetRoleValidation is not defined userSetRoleValidation is not defined","stack":"ReferenceError: userSetRoleValidation is not defined\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\src\\routes\\users.js:242:23\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at Layer.handle [as handle_request] (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:354:14)\n    at param (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:365:14)\n    at Function.process_params (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:410:3)\n    at next (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\express\\lib\\router\\index.js:275:10)"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"kind":"ObjectId","level":"error","message":"Cast to ObjectId failed for value \"616feaa4d4ec6a60f635f93\" (type string) at path \"_id\" for model \"User\" Cast to ObjectId failed for value \"616feaa4d4ec6a60f635f93\" (type string) at path \"_id\" for model \"User\"","path":"_id","reason":{},"stack":"CastError: Cast to ObjectId failed for value \"616feaa4d4ec6a60f635f93\" (type string) at path \"_id\" for model \"User\"\n    at model.Query.exec (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\query.js:4545:21)\n    at model.Query.Query.then (C:\\Users\\Lakhder\\Desktop\\complaints-management-system\\node_modules\\mongoose\\lib\\query.js:4644:15)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)","stringValue":"\"616feaa4d4ec6a60f635f93\"","value":"616feaa4d4ec6a60f635f93","valueType":"string"}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
{"level":"info","message":"App run on port 3000"}
{"level":"info","message":"Successfuly connected to mongoDB ...."}
